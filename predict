#!/usr/bin/env bash

# predict CIMP status from gene expression data
if [ "$1" == "-h" ] ; then
	echo -e "Predict CIMP status from gene expression in FPKM format
	Usage: `basename $0` -i <dirIn> -o <dirOut> -f <file> -k <key> -t <threshold>
	<dirIn>: input directory
	<dirOut>: output directory
	<file>: file containing names of input files; input files themselves should be in format 'ENSG \ FPKM'
	<key>: key for CIMP(+) expression thresholds; default file at /home/dtam/CIMPkey; format is 'ENSG \ gtOrlt \ cutoff'
	<threshold>: cutoff for number of genes with increased expression before CIMP is (+); default is 3 "
	exit 0
fi

key=/home/dtam/CIMPkey
threshold=3

while [[ $# -gt 0 ]]
do
	case "$1" in
		-i) dirIn="$2"; shift;;
		-o) dirOut="$2"; shift;;
		-f) file="$2"; shift;;
		-k) key="$2"; shift;;
		-t) threshold="$2"; shift;;
	esac
	shift
done

mkdir -p $dirOut
echo "CIMPpos" > $dirOut/list_CIMPpos
echo "CIMPneg" > $dirOut/list_CIMPneg

# for every file...
while read line
do
	for sample in $dirIn/$line
	do
		noIncrExp=0
		noDecrExp=0

		# for every key-value pair in the threshold file...
		while read line
		do
			# read ENSG being searched for and its threshold for (+) from keyfile
			currSearch="$(echo "$line" | cut -f1)"
			currGtLt="$(echo "$line" | cut -f2)"
			currCutoff="$(echo "$line" | cut -f3)"

			# find matching ENSG in query file and store its expression
			queryValue="$(grep -w "$currSearch" "$sample" | cut -f2)"

			# if query is present...
			if [[ $queryValue != "" ]]
			then
				# determine if expression meets greater-than threshold for (+) from keyfile
				if [[ $currGtLt == "gt" ]]
				then
					if (( $(bc <<< "$queryValue >= $currCutoff") ))
					then
						(( noIncrExp++ ))
					fi
				# ...or determine if expression meets less-than threshold for (+) from keyfile
				elif [[ $currGtLt == "lt" ]]
				then
					if (( $(bc <<< "$queryValue <= $currCutoff") ))
					then
						(( noDecrExp++ ))
					fi
				fi
			fi

		done < $key

		# after all expression data is assessed for above/below cutoff, determine if sample is (+)
		#   >> output is written into two files
		if (( ($noIncrExp + $noDecrExp) >= $threshold ))
		then
			printf "%b\t%b\t%b\t%b\n" "$(basename $sample)" $noIncrExp $noDecrExp $(($noIncrExp + $noDecrExp))\
			>> $dirOut/list_CIMPpos
		else
			printf "%b\t%b\t%b\t%b\n" "$(basename $sample)" $noIncrExp $noDecrExp $(($noIncrExp + $noDecrExp))\
			>> $dirOut/list_CIMPneg
		fi

	done
done < $file

# +INPUT
# <== input1 ==> is negative by GT
# ENSG01	0.2
# ENSG02	0.7
# ENSG03	0.3

# <== input2 ==> is positive by GT
# ENSG01	0.5
# ENSG02	0.8
# ENSG03	0.9

# <== input3 ==> is negative by LT
# ENSG04	0.3
# ENSG05	0.2
# ENSG06	0.1

# <== input4 ==> is positive by LT
# ENSG04	0.1
# ENSG05	0.2
# ENSG06	0.05

# ----------
# test with $ predict -i testFiles -o ./  -f "*" -k testFiles/key

# +OUTPUT
# <== list_CIMPpos ==>
# input2
# input4

# <== list_CIMPneg ==>
# input1
# input3

# ----------

# +KEY
# ENSG01	gt	0.5
# ENSG02	gt	0.6
# ENSG03	gt	0.7
# ENSG04	lt	0.2
# ENSG05	lt	0.2
# ENSG06	lt	0.1
